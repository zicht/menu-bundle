<?php
/**
 * @author Gerard van Helden <gerard@zicht.nl>
 * @copyright Zicht Online <http://zicht.nl>
 */
namespace Zicht\Bundle\MenuBundle\Admin;

use Sonata\AdminBundle\Datagrid\DatagridMapper;
use \Sonata\AdminBundle\Form\FormMapper;
use \Zicht\Bundle\MenuBundle\Entity;
use \Zicht\Bundle\FrameworkExtraBundle\Admin\TreeAdmin;
use Zicht\Bundle\MenuBundle\Security\Authorization\MenuVoter;

class MenuItemAdmin extends TreeAdmin
{
    public function configureFormFields(FormMapper $formMapper)
    {
        parent::configureFormFields($formMapper);

        $formMapper
            ->add('path', 'zicht_url', array('required' => false))
            ->add('name', null, $this->getDefaultNameOptions())
        ;

        $formMapper->setHelps(array(
            'name' => 'Name can be used as an url reference in code'
        ));
    }

    /**
     * helper method, than can be accessed/used for extended classes
     *
     * @return array
     */
    protected function getDefaultNameOptions()
    {
        if ($this->hasNameFieldAccess()) {
            return array();
        } else {
            return array(
                'read_only' => true,
                'disabled'  => true,
            );
        }
    }

    /**
     * @param   array $options
     * @return  array
     */
    protected function getNameOptions(array $options = array())
    {
        return array_merge($this->getDefaultNameOptions(), $options);
    }

    /**
     * @param DatagridMapper $filter
     */
    protected function configureDatagridFilters(DatagridMapper $filter)
    {
        parent::configureDatagridFilters($filter); // TODO: Change the autogenerated stub

        $filter
            ->add('title')
            ->add('path')
        ;
    }

    /**
     * @return bool
     */
    protected function hasNameFieldAccess()
    {
        return $this
            ->getConfigurationPool()
            ->getContainer()
            ->get("security.context")
            ->isGranted(
                MenuVoter::ROLE_NAME_FIELD_ACCESS,
                $this->getSubject()
            )
        ;
    }
}